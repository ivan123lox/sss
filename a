
#define BLYNK_PRINT Serial    // Comment this out to disable prints and save space
#include <SPI.h>
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#include <SimpleTimer.h>
#include <DHT.h>

// You should get Auth Token in the Blynk App.
// Go to the Project Settings (nut icon).
char auth[] = "l4zaoT9xBU2s2l_6dOdskm4UIY1hvOwR";

// Your WiFi credentials.
// Set password to "" for open networks.
char ssid[] = "KVANT72";
char pass[] = "28346dGb7";

#define DHTPIN 2          // What digital pin we're connected to

// Uncomment whatever type you're using!
#define DHTTYPE DHT11     // DHT 11
//#define DHTTYPE DHT22   // DHT 22, AM2302, AM2321
//#define DHTTYPE DHT21   // DHT 21, AM2301
#define INTERVAL_GET_DATA 2000  // интервала измерений, мс 
// пин, к которому подключен датчик
#define HCSR505PIN         D6
// счетчик срабатыаний
int counterHCSR501=0;
DHT dht(DHTPIN, DHTTYPE);
SimpleTimer timer;
 int led = 13 ;// назначение пина для светодиода
int pirPin = 10; // назначение пина для мини ИК датчика
int value ;// переменная для хранения положения датчика
int mq135 = A0; // smoke sensor is connected with the analog pin A0 
int data1 = 0;
int data =  0;
unsigned long millis_int1=0;
void sendSensor()
{
  float h = dht.readHumidity();
  float t = dht.readTemperature(); // or dht.readTemperature(true) for Fahrenheit
  if (isnan(h) || isnan(t)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }
  // You can send any value at any time.
  // Please don't send more that 10 values per second.
  Blynk.virtualWrite(V5, h);
  Blynk.virtualWrite(V6, t);
}

void setup()
{
  Serial.begin(9600); // See the connection status in Serial Monitor
  Blynk.begin(auth, ssid, pass);
  Serial.begin(115200);
  Blynk.begin(auth, ssid, pass);
  timer.setInterval(1000L, getSendData); // new data will be updated every 1 sec 
  dht.begin();
  Serial.begin(9600);
  pinMode (led, OUTPUT) ;// пин светодиода работает как выход
  pinMode (pirPin, INPUT) ; // пин датчика работает как вход
  // Setup a function to be called every second
  timer.setInterval(1000L, sendSensor);
}

void loop()
{
  value = digitalRead (pirPin) ;// чтение значения с датчика
  if (value == HIGH) // когда с ИК сенсора появляется высокий уровень, светодиод загорается
  {
    digitalWrite (led, HIGH);
    Serial.println("movement");
  }
  else
  {
    digitalWrite (led, LOW);
    Serial.println("no movement");
  }
  delay(1000);
  Blynk.run(); // Initiates Blynk
  timer.run(); // Initiates SimpleTimer

 timer.run(); // Initiates SimpleTimer
  Blynk.run();
} 
void getSendData()
{
  data1= digitalRead(pirPin);
   Blynk.virtualWrite(V4, data1);
   if (data1> 1);
   Blynk.notify("slave detected");


data = analogRead(mq135); 
  Blynk.virtualWrite(V2, data); //
 
  if (data > 350)
  
    Blynk.notify("Smoke Detected"); 
  
 
}
